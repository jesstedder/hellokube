apiVersion: v1
kind: ConfigMap
metadata:
  name: hello-kube-config
  namespace: hello-kube
data:
  externalsettings.json: "{
    \ 'RabbitMQ':{'Uri':'rabbitmq://hello-kube-rabbitmq-lb.hello-kube.svc.cluster.local','UserName':'user','Password':'bitnami','EndpointQueue':'hello-kube-web'},
    \ 'Redis':{'ConnectionString':'hello-kube-redis-svc.hello-kube.svc.cluster.local,password=Passw0rd' },
    \ 'SqlServer':{'ConnectionString':'Server=hk-sql-deployment.hello-kube.svc.cluster.local;Database=WideWorldImporters;User Id=sa;Password=c6en%YUpHawa;'  },
    \ 'AzureAd': {'Instance': 'https://login.microsoftonline.com/','Domain': 'snp.fhlbc.in','TenantId': 'e510a899-523d-465f-bc91-8d2ea564984f','ClientId': '4f98a47a-96a0-4e86-bbfc-2e8c43e288d3','CallbackPath': '/signin-oidc'}
    \ }"

    #hello-kube-rabbitmq-rabbitmq.hello-kube.svc.cluster.local
    #helm install --name hello-kube-rabbitmq --namespace hello-kube --set rabbitmqPassword=Passw0rd stable/rabbitmq
---
apiVersion: apps/v1beta1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: hello-kube-service-deployment
  namespace: hello-kube
spec:
  selector:
    matchLabels:
      app: hello-kube-service
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 3
      maxUnavailable: 1      
  template: # create pods using pod definition in this template
    metadata:
      # unlike pod-nginx.yaml, the name is not included in the meta data as a unique name is
      # generated from the deployment name
      labels:
        app: hello-kube-service
    spec:
      containers:
        - name: hello-kube-service-console
          image: snpcontainers2.azurecr.io/hello-kube-service:latest
          imagePullPolicy: Always
          volumeMounts:
          - name: config-volume
            mountPath: /config
      volumes:
        - name: config-volume
          configMap:
            # Provide the name of the ConfigMap containing the files you want
            # to add to the container
            name: hello-kube-config
